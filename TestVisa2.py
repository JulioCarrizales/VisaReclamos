# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestTest():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_test(self):
    # Test name: Test
    # Step # | name | target | value | comment
    # 1 | open | /login/?realm=vol&goto=https:%2F%2Fsecure.visaonline.com:443%2Fagent%2Fcustom-login-response%3Fstate%3DSUgEVn44Esy8uKSTttk3WfSGnj8%26realm%3Dvol&original_request_url=https:%2F%2Fsecure.visaonline.com:443%2F |  | 
    self.driver.get("https://www.visaonline.com/login/?realm=vol&goto=https:%2F%2Fsecure.visaonline.com:443%2Fagent%2Fcustom-login-response%3Fstate%3DSUgEVn44Esy8uKSTttk3WfSGnj8%26realm%3Dvol&original_request_url=https:%2F%2Fsecure.visaonline.com:443%2F")
    # 2 | setWindowSize | 1280x672 |  | 
    self.driver.set_window_size(1280, 672)
    # 3 | click | id=username |  | 
    self.driver.find_element(By.ID, "username").click()
    # 4 | type | id=username | ggutierrezag@bn.com.pe | 
    self.driver.find_element(By.ID, "username").send_keys("ggutierrezag@bn.com.pe")
    # 5 | type | id=password | Estrellaviviana24. | 
    self.driver.find_element(By.ID, "password").send_keys("Estrellaviviana24.")
    # 6 | sendKeys | id=password | ${KEY_ENTER} | 
    self.driver.find_element(By.ID, "password").send_keys(Keys.ENTER)
    # 7 | mouseOver | id=ROL |  | 
    element = self.driver.find_element(By.ID, "ROL")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 8 | click | id=ROL |  | 
    self.driver.find_element(By.ID, "ROL").click()
    # 9 | storeWindowHandle | root |  | 
    self.vars["root"] = self.driver.current_window_handle
    # 10 | selectWindow | handle=${win1630} |  | 
    self.driver.switch_to.window(self.vars["win1630"])
    # 11 | selectWindow | handle=${root} |  | 
    self.driver.switch_to.window(self.vars["root"])
    # 12 | mouseOut | id=ROL |  | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 13 | selectWindow | handle=${win1630} |  | 
    self.driver.switch_to.window(self.vars["win1630"])
    # 14 | click | linkText=Transaction Inquiry |  | 
    self.driver.find_element(By.LINK_TEXT, "Transaction Inquiry").click()
  
